###########################################
# RPC add-onのサービスコール
###########################################
addon_rpcshutdown_redastray:
  sequence:
  - alias: addon_rpcshutdown_redastray
    service: hassio.addon_stdin
    data:
      addon: core_rpc_shutdown
      input: red-astray

###########################################
# ifttt経由でLINE_botに飛ばすスクリプト
###########################################
notify_line_mtg:
  sequence:
    - service: ifttt.trigger
      data_template: {"event":"ekolun_line", "value1":"{{ value1 }}"}

notify_line_log:
  sequence:
    - service: ifttt.trigger
      data_template: {"event":"logline", "value1":"{{ value1 }}"}


###########################################
# nRemo APIで電灯たたくrest_command
###########################################
light_living_on:
  sequence:
  - service: rest_command.light_living_on

light_living_off:
  sequence:
  - service: rest_command.light_living_off

light_dining_on:
  sequence:
  - service: rest_command.light_dining_on

light_dining_off:
  sequence:
  - service: rest_command.light_dining_off

light_bed_on:
  sequence:
  - service: rest_command.light_bed_on

light_bed_off:
  sequence:
  - service: rest_command.light_bed_off

###########################################
# nRemo APIでエアコンたたくrest_command
###########################################
aircon_living:
  sequence:
  - service: rest_command.aircon_living
    data_template:
      temp: >
        {% if is_state('sensor.season', 'summer')%}1{% elif is_state('sensor.season', 'winter')%}-1{%else%}0{%endif%}

aircon_bed:
  sequence:
  - service: rest_command.aircon_bed
    data_template:
      temp: >
        {% if is_state('sensor.season', 'summer')%}1{% elif is_state('sensor.season', 'winter')%}-1{%else%}0{%endif%}

aircon_bed_off:
  sequence:
  - service: rest_command.aircon_bed_off

aircon_living_off:
  sequence:
  - service: rest_command.aircon_living_off
