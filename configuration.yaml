######################
# おおもとの設定ファイル。
#  gitで公開したくない情報は !secret <key名> で隠蔽可能。
#  →https://www.home-assistant.io/docs/configuration/secrets/
######################


homeassistant:
######################
# 基本セクション
######################
  # Name of the location where Home Assistant is running
  name: hassio
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Asia/Tokyo
  # Customization file
  customize: !include customize.yaml
  
  whitelist_external_dirs:

######################
# HA管理画面の左フレームへショートカット作成
######################
panel_iframe:
  mdiindex:
    title: MDI Icon Index
    icon: mdi:vector-square
    url: https://cdn.rawgit.com/james-fry/home-assistant-mdi/efd95d7a/home-assistant-mdi.html

######################
# 管理画面設定
######################
http:
  api_password: !secret http_password
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
  base_url: !secret base_url
  ip_ban_enabled: true
  login_attempts_threshold: 7

###########################################
# Core Components
###########################################
config:
conversation:
frontend:
logbook:
zeroconf:
updater:
  include_used_components: true


###########################################
# Simple Components
###########################################
cloud:
ffmpeg:
homekit:
ios:
map:
mqtt:
sun:
wake_on_lan:

discovery:
  #enable:
  #  - homekit
lock:
  - platform: sesame
    email: !secret sesame_id
    password: !secret sesame_pass
tts:
  - platform: google
    language: 'ja'
weather:
  - platform: yweather
  - platform: openweathermap
    api_key: !secret openweathermap_key
  - platform: darksky
    api_key: !secret darksky_key

###########################################
# Includes
#  include で他ファイルへ飛ばせる。
#  include_dir_merge_named でフォルダ指定してすべてマージして読み込ませられる。
###########################################
automation: !include automations.yaml
camera: !include camera.yaml
group: !include_dir_merge_named groups_views
history: !include history.yaml
media_player: !include media_player.yaml
notify: !include notify.yaml
script: !include scripts.yaml
zone: !include zones.yaml
history_graph: !include history_graph.yaml
rest_command: !include rest_command.yaml
binary_sensor: !include binary_sensor.yaml

###########################################
# Third Party Platforms
###########################################
ifttt:
  key: !secret ifttt_key

device_tracker:

###########################################
# 未整理
###########################################


sensor:
    ###########################################
    # APIに何人ぶら下がってるか？
    ###########################################
    - platform: api_streams
    ###########################################
    # version確認センサー
    ###########################################
    - platform: version
    ###########################################
    # システムモニターセンサー
    ###########################################
    - platform: systemmonitor
      resources:
        - type: memory_use_percent
        - type: processor_use
        - type: disk_use_percent
        - type: last_boot
    ###########################################
    # HAの起動時間センサー
    ###########################################
    - platform: uptime
    ###########################################
    # YRウェザーのアイコン取得センサー
    ###########################################
    - platform: yr
    ###########################################
    # Yahoo天気取得センサー
    ###########################################
    - platform: yweather
      monitored_conditions:
      - weather
      - weather_current
      - temp_min
      - temp_max
      - wind_speed
    ###########################################
    # pi_holeの広告ブロック数センサー
    ###########################################
    - platform: pi_hole
    ###########################################
    # PiのGPIOにつないだI2C接続のbme280センサー
    ###########################################
    - platform: bme280
      name: Ambient
      i2c_address: 0x76
      operation_mode: 2  # forced mode
      time_standby: 5
      oversampling_temperature: 4
      oversampling_pressure: 4
      oversampling_humidity: 4
      delta_temperature: -0.5
      monitored_conditions:
        - temperature
        - humidity
        - pressure
      scan_interval: 180
    ###########################################
    # device_trackerの属性値から引っ張る更新日時センサー
    ###########################################
    - platform: template
      sensors:
        ay_lastupdate:
          friendly_name: "lastupdate"
          value_template: "{{ as_timestamp(states.device_tracker.ay_phone.last_updated )|timestamp_custom('%Y-%m-%d %H:%M:%S') }}"

    - platform: template
      sensors:
        k1_lastupdate:
          friendly_name: "lastupdate"
          value_template: "{{ as_timestamp(states.device_tracker.k1_phone.last_updated )|timestamp_custom('%Y-%m-%d %H:%M:%S') }}"

    ###########################################
    # 日の出、日の入り算出センサー
    ###########################################
    - platform: template
      sensors:
        day_night:
          friendly_name: 'Day/Night'
          value_template: '{% if is_state("sun.sun", "above_horizon") %}Day{% else %}Night{% endif %}'
          icon_template: '{% if is_state("sun.sun", "above_horizon") %}mdi:weather-sunny{% else %}mdi:weather-night{% endif %}'

    - platform: template
      sensors:
        solar_angle:
          value_template: '{{ states.sun.sun.attributes.elevation }}'
          friendly_name: 'Solar Angle'
          unit_of_measurement: 'degrees'
        sunrise:
          value_template: '{{ ((as_timestamp(states.sun.sun.attributes.next_rising)) | timestamp_local) [11:16] }} am'
          friendly_name: 'Sunrise'
        sunset:
          value_template: '{{ ((as_timestamp(states.sun.sun.attributes.next_setting)-(43200)) | timestamp_local) [11:16] }} pm'
          friendly_name: 'Sunset'
    ###########################################
    # Speedtest.netでの速度計測を定期的に行い記録する。
    #  混雑時間帯など把握できたらと思って設置
    ###########################################
    - platform: speedtest
      server_id: 6087
      hour:
        - 0
        - 3
        - 6
        - 9
        - 12
        - 15
        - 18
        - 21
      monitored_conditions:
        - ping
        - download
        - upload
    ###########################################
    # 月の満ち欠けセンサー
    ###########################################
    - platform: moon

    ###########################################
    # 「今は夏ですｷﾘｯ」って教えてくれるセンサー
    ###########################################
    - platform: season
      type: astronomical

    ###########################################
    # 「今は夏ですｷﾘｯ」って教えてくれるしアイコンも変わるセンサー
    ###########################################
    - platform: template
      sensors:
        season_template:
          friendly_name: "Season"
          value_template: >-
            {%- if is_state("sensor.season", "spring") %}
              Spring
            {%- elif is_state("sensor.season", "summer") %}
              Summer
            {%- elif is_state("sensor.season", "autumn") %}
              Autumn
            {%- elif is_state("sensor.season", "winter") %}
              Winter
            {% else %}
              None
            {% endif %}
          icon_template: >-
            {%- if is_state("sensor.season_template", "Spring") %}
              mdi:weather-sunset
            {%- elif is_state("sensor.season_template", "Summer") %}
              mdi:weather-sunny
            {%- elif is_state("sensor.season_template", "Autumn") %}
              mdi:leaf
            {%- elif is_state("sensor.season_template", "Winter") %}
              mdi:weather-snowy
            {% else %}
              mdi:weather-snowy-rainy
            {% endif %}
    ###########################################
    # nature Remoから室温と湿度と照度センサー読み出し
    ###########################################
    - platform: jsonrest
      resource: https://api.nature.global/1/devices
      name: nremo_json
      headers:
        Authorization: !secret nature_key
#      scan_interval: 15
      force_update: true
    - platform: template
      sensors:
        nremo0_temp:
          friendly_name_template: '{{ states.sensor.nremo_json.attributes.list[0].name|replace("remo-","") }} 室温'
          value_template: '{{ states.sensor.nremo_json.attributes.list[0].newest_events.te.val }}'
          unit_of_measurement: "°C"
        nremo0_humidity:
          friendly_name_template: '{{ states.sensor.nremo_json.attributes.list[0].name|replace("remo-","") }} 湿度'
          value_template: '{{ states.sensor.nremo_json.attributes.list[0].newest_events.hu.val }}'
          unit_of_measurement: "%"
        nremo0_ilmi:
          friendly_name_template: '{{ states.sensor.nremo_json.attributes.list[0].name|replace("remo-","") }} 照度'
          value_template: '{{ states.sensor.nremo_json.attributes.list[0].newest_events.il.val }}'
          unit_of_measurement: "lx"
        nremo1_temp:
          friendly_name_template: '{{ states.sensor.nremo_json.attributes.list[1].name|replace("remo-","") }} 室温'
          value_template: '{{ states.sensor.nremo_json.attributes.list[1].newest_events.te.val }}'
          unit_of_measurement: "°C"
        nremo1_humidity:
          friendly_name_template: '{{ states.sensor.nremo_json.attributes.list[1].name|replace("remo-","") }} 湿度'
          value_template: '{{ states.sensor.nremo_json.attributes.list[1].newest_events.hu.val }}'
          unit_of_measurement: "%"
        nremo1_ilmi:
          friendly_name_template: '{{ states.sensor.nremo_json.attributes.list[1].name|replace("remo-","") }} 照度'
          value_template: '{{ states.sensor.nremo_json.attributes.list[1].newest_events.il.val }}'
          unit_of_measurement: "lx"
    ###########################################
    # Sonoff Pow から値読み出し
    ###########################################
    - platform: mqtt
      name: "P1_Energy_today"
      state_topic: "tele/sonoffP1/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Today"] }}'
      unit_of_measurement: "kWh"
    - platform: mqtt
      name: "P1_Energy_yesterday"
      state_topic: "tele/sonoffP1/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
      unit_of_measurement: "kWh"
    - platform: mqtt
      name: "P1_Energy_total"
      state_topic: "tele/sonoffP1/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Total"] }}'
      unit_of_measurement: "kWh"
    - platform: mqtt
      name: "P1_Power"
      state_topic: "tele/sonoffP1/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Power"] }}'
      unit_of_measurement: "W"
    - platform: mqtt
      name: "P1_Voltage"
      state_topic: "tele/sonoffP1/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
      unit_of_measurement: "V"
    - platform: mqtt
      name: "P1_Current"
      state_topic: "tele/sonoffP1/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Current"] }}'
      unit_of_measurement: "A"
    - platform: mqtt
      name: "P2_Energy_today"
      state_topic: "tele/sonoffP2/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Today"] }}'
      unit_of_measurement: "kWh"
    - platform: mqtt
      name: "P2_Energy_yesterday"
      state_topic: "tele/sonoffP2/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Yesterday"] }}'
      unit_of_measurement: "kWh"
    - platform: mqtt
      name: "P2_Energy_total"
      state_topic: "tele/sonoffP2/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Total"] }}'
      unit_of_measurement: "kWh"
    - platform: mqtt
      name: "P2_Power"
      state_topic: "tele/sonoffP2/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Power"] }}'
      unit_of_measurement: "W"
    - platform: mqtt
      name: "P2_Voltage"
      state_topic: "tele/sonoffP2/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
      unit_of_measurement: "V"
    - platform: mqtt
      name: "P2_Current"
      state_topic: "tele/sonoffP2/SENSOR"
      value_template: '{{ value_json["ENERGY"]["Current"] }}'
      unit_of_measurement: "A"


light:
    ###########################################
    # Nanoleaf Aurora操作
    ###########################################
  - platform: nanoleaf_aurora
    host: 192.168.3.18
    token: !secret aurora_token
    ###########################################
    # nRemoのScript呼び出し
    ###########################################
  - platform: template
    lights:
      living:
        friendly_name: "リビング照明"
        turn_on:
          service: script.light_living_on
        turn_off:
          service: script.light_living_off

      dining:
        friendly_name: "ダイニング照明"
        turn_on:
          service: script.light_dining_on
        turn_off:
          service: script.light_dining_off

      bed:
        friendly_name: "ベッド照明"
        turn_on:
          service: script.light_bed_on
        turn_off:
          service: script.light_bed_off



switch:
  ###########################################
  # MQTT経由のSonoff Basic1
  ###########################################
  - platform: mqtt
    name: "Sonoff1"
    state_topic: "stat/sonoff1/POWER"
    command_topic: "cmnd/sonoff1/POWER"
    availability_topic: "tele/sonoff1/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  ###########################################
  # MQTT経由のSonoff Basic2
  ###########################################
  - platform: mqtt
    name: "Sonoff2"
    state_topic: "stat/sonoff2/POWER"
    command_topic: "cmnd/sonoff2/POWER"
    availability_topic: "tele/sonoff2/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  ###########################################
  # MQTT経由のSonoff Basic3
  ###########################################
  - platform: mqtt
    name: "Sonoff2"
    state_topic: "stat/sonoff3/POWER"
    command_topic: "cmnd/sonoff3/POWER"
    availability_topic: "tele/sonoff3/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  ###########################################
  # MQTT経由のSonoff Basic4
  ###########################################
  - platform: mqtt
    name: "Sonoff4"
    state_topic: "stat/sonoff4/POWER"
    command_topic: "cmnd/sonoff4/POWER"
    availability_topic: "tele/sonoff4/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  ###########################################
  # Windowsマシンのon/off
  #  wake on lanで起動して、pingで生死確認して、RPCshutdownで終了
  ###########################################
  - platform: wake_on_lan
    name: 'Red-Astray'
    host: 192.168.3.3
    mac_address: "40-8D-5C-53-16-3A"
    turn_off: 
      service: script.addon_rpcshutdown_redastray

